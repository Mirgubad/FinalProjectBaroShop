@using Core.Constants;
@using Web.ViewModels.Product;
@model ProductIndexVM;
@{
    ViewBag.Title = "Products";
}

<div class="product-container">
    <div class="product-inner">
        <aside class="categories">
            <div class="category-item">
                <div class="category-title" data-id="1">
                    <span>Gender</span>
                    <div><i id="1" class="fas fa-chevron-down arrow"></i></div>
                </div>
                <div class="sub-categories" id="1">
                    <div class="inner-category">
                        @{
                            foreach (var productGender in Enum.GetValues(typeof(Gender)))
                            {
                                <div>
                                    <input id="@productGender.ToString()" type="checkbox" />
                                    <label for="@productGender.ToString()">@productGender.ToString().Normalize() </label>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>

            <div class="category-item">
                <div class="category-title" data-id="2">
                    <span>Brand</span>
                    <div><i id="2" class="fas fa-chevron-down arrow"></i></div>
                </div>
                <div class="sub-categories scroll" id="2">
                    <div class="inner-category">
                        @{
                            foreach (var brand in Model.Brands)
                            {
                                <div>
                                    <input id="@brand.Title" type="checkbox" />
                                    <label for="@brand.Title">@brand.Title</label>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>

            <div class="category-item">
                <div class="category-title" data-id="3">
                    <span>Color</span>
                    <div><i id="3" class="fas fa-chevron-down arrow"></i></div>
                </div>
                <div class="sub-categories scroll" id="3">
                    <div class="inner-category colors">
                        @{
                            foreach (var color in Model.Colors)
                            {
                                <div>
                                    <input type="checkbox"
                                       class="btn-check color"
                                       data-value="@color.Title.ToLower()"
                                       id="@color.Title.ToLower()"
                                       autocomplete="off" />
                                    <label class="btn bg-@color.Title.ToLower() product-color" for="@color.Title.ToLower()"></label>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>

            <div class="category-item">
                <div class="category-title" data-id="4">
                    <span>Model</span>
                    <div><i id="4" class="fas fa-chevron-down arrow"></i></div>
                </div>
                <div class="sub-categories" id="4">
                    <div class="inner-category">
                        @{
                            foreach (var productModel in Enum.GetValues(typeof(Model)))
                            {
                                <div>
                                    <input id="@productModel.ToString().ToLower()" type="checkbox" />
                                    <label for="@productModel.ToString().ToLower()">@productModel.ToString().Normalize()</label>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>

            <div class="category-item">
                <div class="category-title" data-id="6">
                    <span>Material</span>
                    <div><i id="6" class="fas fa-chevron-down arrow"></i></div>
                </div>
                <div class="sub-categories" id="6">
                    <div class="inner-category">
                        @{
                            foreach (var productMaterial in Enum.GetValues(typeof(Material)))
                            {
                                <div>
                                    <input id="@productMaterial.ToString().ToLower()" type="checkbox" />
                                    <label for="@productMaterial.ToString().ToLower()">@productMaterial.ToString().Normalize()</label>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>

            <div class="category-item">
                <div class="category-title" data-id="5">
                    <span>Price</span>
                    <div><i id="5" class="fas fa-chevron-down arrow"></i></div>
                </div>
                <div class="sub-categories" id="5">
                    <div class="inner-category">
                        <div class="price-filter">
                            <input id="@Model.MinPrice" placeholder="min" />
                            <label>-</label>
                            <input id="@Model.MaxPrice" placeholder="max" />
                            <div class="search-filter">
                                <i class="fa fa-search" aria-hidden="true"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </aside>

        <div style="margin-bottom:80px" class="product-center">
            <div class="products">
                @{
                    foreach (var product in Model.Products)
                    {
                        <div class="product-item" data-id="@product.Id">
                            <a asp-action="details" asp-controller="product" asp-route-id="@product.Id">
                                <div class="product-img">
                                    <img src="/assets/images/@product.MainPhoto" alt="@product.Title" />
                                </div>
                            </a>
                            <div class="product-info">
                                <p><strong>@product.Brand.Title</strong>  @product.Title</p>
                                <span class="product-price">@product.Price.99$</span>
                            </div>
                            <div class="head-left">
                                @{
                                    if (product.ShippingStatus.ToString().ToLower() == "freeshipping")
                                    {
                                        <span class="free-shipping">FREE SHIPPING</span>
                                    }
                                    if (product.ShippingStatus.ToString().ToLower() == "fastshipping")
                                    {
                                        <span class="fast-shipping">FAST SHIPPING</span>
                                    }
                                }
                            </div>
                            <div class="head-right" id="@product.Id">
                                <div class="product-heart" data-id="@product.Id">
                                    <i class="fa fa-heart" aria-hidden="true"></i>
                                </div>
                                <div class="add-basket-btn">
                                    <i class="fa fa-cart-plus" aria-hidden="true"></i>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
            @{
                if (Model.Products.Count <= Model.PageCount)
                {
                    <div class="paginate">
                        <div class="pages">
                            @{
                                var prevPage = Model.Page - 1;
                                if (1 < Model.Page)
                                {
                                    <a style="color:black" asp-action="index" asp-controller="product" asp-route-page="@prevPage">
                                        <span class="page">

                                            <i class="fa fa-chevron-circle-left" aria-hidden="true"></i>

                                        </span>
                                    </a>
                                }


                                for (int i = 1; i <= Model.PageCount; i++)
                                {
                                    <a class="@(i==Model.Page?"page-num disabled":"page-num")" asp-action="index" asp-controller="product" asp-route-page="@i" asp-route-searchinput="@Model.SearchInput">
                                        <span>@i</span>
                                    </a>
                                    //<span class="page-num">2</span>
                                    //<span class="page-num">3</span>
                                }

                                var nextPage = Model.Page + 1;

                                if (Model.Page != Model.PageCount)
                                {
                                    <a style="color:black" asp-action="index" asp-controller="product" asp-route-page="@nextPage">
                                        <span class="page">
                                            <i class="fa fa-chevron-circle-right" aria-hidden="true"></i>
                                        </span>
                                    </a>

                                }
                            }


                        </div>
                    </div>
                }
            }

        </div>
    </div>
</div>

@section Scripts{
    <script src="~/assets/Scripts/product.js"></script>

              }